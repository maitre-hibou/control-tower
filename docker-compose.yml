services:
  app:
    build:
      context: .
      dockerfile: .docker/images/app/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_app
    networks:
      internal:
        aliases:
          - ${COMPOSE_PROJECT_NAME}-app.docker
    volumes:
      - .:/var/www
      - app_cache:/var/www/var/cache
  web:
    build:
      context: .
      dockerfile: .docker/images/web/Dockerfile
    container_name: ${COMPOSE_PROJECT_NAME}_web
    depends_on:
      app:
        condition: service_healthy
    env_file:
      - .env
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_PROJECT_NAME}_external"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_web.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}_web.rule=Host(`${APP_DOMAIN}`)"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}_web.loadbalancer.server.port=80"
    networks:
      internal:
        aliases:
          - ${COMPOSE_PROJECT_NAME}-web.docker
      external:
    volumes:
      - ./public:/var/www/public

networks:
  internal:
  external:

volumes:
  app_cache:
